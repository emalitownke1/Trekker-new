name: Clean Redeploy Trigger

on:
  schedule:
    # Trigger redeploy
    - cron: '0 0 * * *'     # midnight
    - cron: '45 2 * * *'
    - cron: '30 5 * * *'
    - cron: '15 8 * * *'
    - cron: '0 11 * * *'
    - cron: '45 13 * * *'
    - cron: '30 16 * * *'
    - cron: '15 19 * * *'
    - cron: '0 22 * * *'
  workflow_dispatch:

jobs:
  trigger:
    runs-on: ubuntu-latest
    if: github.event.schedule != '' # only on cron
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Commit and push trigger
        run: |
          echo "Triggered at $(date -u) â€” $RANDOM" > .choreo-redeploy-trigger.txt
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add .choreo-redeploy-trigger.txt
          git commit -m "chore: trigger redeploy"
          git push

  cleanup:
    runs-on: ubuntu-latest
    needs: trigger
    steps:
      - name: Wait 6 hours
        run: sleep 21600  # 6h = 21600 seconds

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Remove trigger commits
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

          # Find all trigger commits in last 10 (safe window)
          TRIGGERS=$(git log --grep="^chore: trigger redeploy" -n 10 --pretty=format:"%H")

          if [ -n "$TRIGGERS" ]; then
            echo "Found trigger commits:"
            echo "$TRIGGERS"
            # Revert each one (oldest first)
            for sha in $(echo "$TRIGGERS" | tac); do
              echo "Reverting $sha"
              git revert --no-edit $sha || true
            done
            git push
          else
            echo "No trigger commits found to clean."
          fi
